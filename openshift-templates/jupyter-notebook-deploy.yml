kind: Template
apiVersion: v1
metadata:
  name: deploy-simple-http-container
  annotations:
    openshift.io/display-name: HTTP App Deploy Template
    description: A template to deploy your an App with a HTTP endpoint
    iconClass: icon-cube
    tags: http
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - name: 8888-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      deploymentconfig: "${NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - image: ${NAME}
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 8888
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
          - name: JUPYTER_NOTEBOOK_PASSWORD
            value: ${PASSWORD}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}
      application: ${NAME}
    name: ${NAME}
  spec:
    port:
      targetPort: ${TARGET_PORT}
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None    
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects and the related imagestream.
  required: true
- name: PASSWORD
  displayName: Jupyter Notebook Password
  description: The password for the deployed Jupyter Notebook
  required: true  
  value: developer
- description: The service port to route traffic.
  displayName: target Port
  name: TARGET_PORT
  required: true
  value: 8888-tcp